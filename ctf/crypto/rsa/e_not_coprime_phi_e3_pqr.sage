#MidCrypto, xiangshan-2021,http://www.zbc53.top/archives/143/

import libnum

N=3298593732762513945346583663585189774036688951059270517149719979434109398447628726951796006700754759352430339647168415338320547665794785951232342902233013221132246450312038122695046634624323814318286314664160113738299465643128504110932989263063331290006313
M=2**54
a=[]
s=0
for i in range(1,17):
    x=(N%(M**i)-s)//(M**(i-1))
    a.append(x)
    s+=x*M**(i-1)
PR.<x> = PolynomialRing(ZZ)
f=0
for i in range(len(a)):
    f+=a[i]*x^i
f.factor()
#(350*x^5 + 48522*x^4 + 12574*x^3 + 35367*x^2 + 47153*x + 11459) * (25282*x^5 + 31957*x^4 + 31998*x^3 + 6834*x^2 + 31014*x + 33821) * (54595*x^5 + 17296*x^4 + 5814*x^3 + 36787*x^2 + 58035*x + 45247)
 
x=2**54
p=350*x^5 + 48522*x^4 + 12574*x^3 + 35367*x^2 + 47153*x + 11459
q=25282*x^5 + 31957*x^4 + 31998*x^3 + 6834*x^2 + 31014*x + 33821
r=54595*x^5 + 17296*x^4 + 5814*x^3 + 36787*x^2 + 58035*x + 45247
 
print(p*q*r==N)

def findRoots(p, e, c):
    R.<x> = Zmod(p)[]
    f = x ^ e - c
    f = f.monic()
    return f.roots()
 
def decrypt(p,q,r,e,c):
    proots = findRoots(p, e, c)
    qroots = findRoots(q, e, c)
    rroots = findRoots(r, e, c)
 
    for i in proots:
        for j in qroots:
          for k in rroots:
            m=CRT_list([int(i[0]),int(j[0]), int(k[0])],[p,q,r])
            print(libnum.n2s(m))
            

e=3
c=869489491924953293290699796392271834401780578884556874640489836779925847562085802848542382525324081900560761299059365684697233025590164192409062717942292142906458498707677300694595072310705415037345581289469698221468377159605973403471463296806900975548438
decrypt(p,q,r,e,c)
#flag{e1b7d2c2-e265-11eb-b693-98fa9b5bc5fe}
