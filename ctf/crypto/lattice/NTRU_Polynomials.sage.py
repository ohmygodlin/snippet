

# This file was *autogenerated* from the file NTRU_Polynomials.sage
from sage.all_cmdline import *   # import sage library

_sage_const_6030 = Integer(6030); _sage_const_858 = Integer(858); _sage_const_2865 = Integer(2865); _sage_const_185 = Integer(185); _sage_const_1976 = Integer(1976); _sage_const_5438 = Integer(5438); _sage_const_4022 = Integer(4022); _sage_const_16964 = Integer(16964); _sage_const_12726 = Integer(12726); _sage_const_6811 = Integer(6811); _sage_const_10104 = Integer(10104); _sage_const_23641 = Integer(23641); _sage_const_14223 = Integer(14223); _sage_const_4083 = Integer(4083); _sage_const_21907 = Integer(21907); _sage_const_24215 = Integer(24215); _sage_const_7367 = Integer(7367); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_3198 = Integer(3198); _sage_const_19 = Integer(19); _sage_const_18 = Integer(18); _sage_const_26233 = Integer(26233); _sage_const_9252 = Integer(9252); _sage_const_10059 = Integer(10059); _sage_const_27047 = Integer(27047); _sage_const_15100 = Integer(15100); _sage_const_10423 = Integer(10423); _sage_const_8150 = Integer(8150); _sage_const_24061 = Integer(24061); _sage_const_14443 = Integer(14443); _sage_const_8866 = Integer(8866); _sage_const_2961 = Integer(2961); _sage_const_24770 = Integer(24770); _sage_const_17573 = Integer(17573); _sage_const_3604 = Integer(3604); _sage_const_23059 = Integer(23059); _sage_const_22102 = Integer(22102); _sage_const_21985 = Integer(21985); _sage_const_25592 = Integer(25592); _sage_const_21557 = Integer(21557); _sage_const_3534 = Integer(3534); _sage_const_8381 = Integer(8381); _sage_const_12420 = Integer(12420); _sage_const_9793 = Integer(9793); _sage_const_9792 = Integer(9792); _sage_const_24769 = Integer(24769); _sage_const_7355 = Integer(7355); _sage_const_2819 = Integer(2819); _sage_const_2697 = Integer(2697); _sage_const_257 = Integer(257); _sage_const_10572 = Integer(10572); _sage_const_18435 = Integer(18435); _sage_const_16115 = Integer(16115); _sage_const_17877 = Integer(17877); _sage_const_9471 = Integer(9471); _sage_const_15555 = Integer(15555); _sage_const_11177 = Integer(11177); _sage_const_27822 = Integer(27822); _sage_const_4373 = Integer(4373); _sage_const_9488 = Integer(9488); _sage_const_6791 = Integer(6791); _sage_const_22838 = Integer(22838); _sage_const_1768 = Integer(1768); _sage_const_14944 = Integer(14944); _sage_const_2 = Integer(2); _sage_const_23510 = Integer(23510); _sage_const_18561 = Integer(18561); _sage_const_8192 = Integer(8192); _sage_const_11797 = Integer(11797); _sage_const_20693 = Integer(20693); _sage_const_955 = Integer(955); _sage_const_19756 = Integer(19756); _sage_const_7552 = Integer(7552); _sage_const_40 = Integer(40); _sage_const_41 = Integer(41); _sage_const_42 = Integer(42); _sage_const_43 = Integer(43); _sage_const_44 = Integer(44); _sage_const_45 = Integer(45); _sage_const_46 = Integer(46); _sage_const_47 = Integer(47); _sage_const_48 = Integer(48); _sage_const_49 = Integer(49); _sage_const_22637 = Integer(22637); _sage_const_22631 = Integer(22631); _sage_const_3293 = Integer(3293); _sage_const_13584 = Integer(13584); _sage_const_9 = Integer(9); _sage_const_28019 = Integer(28019); _sage_const_11382 = Integer(11382); _sage_const_2777 = Integer(2777); _sage_const_7373 = Integer(7373); _sage_const_15860 = Integer(15860); _sage_const_6809 = Integer(6809); _sage_const_22651 = Integer(22651); _sage_const_53 = Integer(53); _sage_const_52 = Integer(52); _sage_const_51 = Integer(51); _sage_const_50 = Integer(50); _sage_const_13535 = Integer(13535); _sage_const_21270 = Integer(21270); _sage_const_22080 = Integer(22080); _sage_const_11303 = Integer(11303); _sage_const_1949 = Integer(1949); _sage_const_8610 = Integer(8610); _sage_const_7485 = Integer(7485); _sage_const_3 = Integer(3); _sage_const_24145 = Integer(24145); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_21848 = Integer(21848); _sage_const_8 = Integer(8); _sage_const_22 = Integer(22); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_9684 = Integer(9684); _sage_const_22666 = Integer(22666); _sage_const_20005 = Integer(20005); _sage_const_23 = Integer(23); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_26 = Integer(26); _sage_const_27 = Integer(27); _sage_const_24 = Integer(24); _sage_const_25 = Integer(25); _sage_const_18006 = Integer(18006); _sage_const_27073 = Integer(27073); _sage_const_11543 = Integer(11543); _sage_const_16947 = Integer(16947); _sage_const_16708 = Integer(16708); _sage_const_5458 = Integer(5458); _sage_const_7873 = Integer(7873); _sage_const_5708 = Integer(5708); _sage_const_3987 = Integer(3987); _sage_const_39 = Integer(39); _sage_const_38 = Integer(38); _sage_const_1757 = Integer(1757); _sage_const_31 = Integer(31); _sage_const_30 = Integer(30); _sage_const_33 = Integer(33); _sage_const_32 = Integer(32); _sage_const_35 = Integer(35); _sage_const_34 = Integer(34); _sage_const_37 = Integer(37); _sage_const_36 = Integer(36); _sage_const_10616 = Integer(10616); _sage_const_19024 = Integer(19024); _sage_const_3381 = Integer(3381); _sage_const_7840 = Integer(7840); _sage_const_9239 = Integer(9239); _sage_const_6022 = Integer(6022)#dasctf-202103
#http://www.zbc53.top/archives/63/
#https://zhuanlan.zhihu.com/p/360389931

def check(List):
    flag=True
    for i in List:
        if abs(i)>_sage_const_1 :
            flag=False
            break
    return flag
 
def balancedmod(f,N,q):
    g = list(((f[i] + q//_sage_const_2 ) %q) - q//_sage_const_2  for i in range(N))
    return Zx(g)
 
def convolution(f,g,N):
    return (f*g) % (x**N-_sage_const_1 )
 
def invertmodprime(f,N,p):
    T = Zx.change_ring(Integers(p)).quotient(x**N-_sage_const_1 )
    return Zx(lift(_sage_const_1  / T(f)))
 
def decrypt(ciphertext,secretkey,N,q,p):
    f,fp = secretkey
    a = balancedmod(convolution(ciphertext,f,N),N,q)
    return balancedmod(convolution(a,fp,N),N,p)
 
Zx = ZZ['x']; (x,) = Zx._first_ngens(1)
hx=_sage_const_14443 *x**_sage_const_52  + _sage_const_10616 *x**_sage_const_51  + _sage_const_11177 *x**_sage_const_50  + _sage_const_24769 *x**_sage_const_49  + _sage_const_23510 *x**_sage_const_48  + _sage_const_23059 *x**_sage_const_47  + _sage_const_21848 *x**_sage_const_46  + _sage_const_24145 *x**_sage_const_45  + _sage_const_12420 *x**_sage_const_44  + _sage_const_1976 *x**_sage_const_43  + _sage_const_16947 *x**_sage_const_42  + _sage_const_7373 *x**_sage_const_41  + _sage_const_16708 *x**_sage_const_40  + _sage_const_18435 *x**_sage_const_39  + _sage_const_18561 *x**_sage_const_38  + _sage_const_21557 *x**_sage_const_37  + _sage_const_16115 *x**_sage_const_36  + _sage_const_7873 *x**_sage_const_35  + _sage_const_20005 *x**_sage_const_34  + _sage_const_11543 *x**_sage_const_33  + _sage_const_9488 *x**_sage_const_32  + _sage_const_2865 *x**_sage_const_31  + _sage_const_11797 *x**_sage_const_30  + _sage_const_2961 *x**_sage_const_29  + _sage_const_14944 *x**_sage_const_28  + _sage_const_22631 *x**_sage_const_27  + _sage_const_24061 *x**_sage_const_26  + _sage_const_9792 *x**_sage_const_25  + _sage_const_6791 *x**_sage_const_24  + _sage_const_10423 *x**_sage_const_23  + _sage_const_3534 *x**_sage_const_22  + _sage_const_26233 *x**_sage_const_21  + _sage_const_14223 *x**_sage_const_20  + _sage_const_15555 *x**_sage_const_19  + _sage_const_3381 *x**_sage_const_18  + _sage_const_23641 *x**_sage_const_17  + _sage_const_2697 *x**_sage_const_16  + _sage_const_11303 *x**_sage_const_15  + _sage_const_6030 *x**_sage_const_14  + _sage_const_7355 *x**_sage_const_13  + _sage_const_20693 *x**_sage_const_12  + _sage_const_1768 *x**_sage_const_11  + _sage_const_10059 *x**_sage_const_10  + _sage_const_27822 *x**_sage_const_9  + _sage_const_8150 *x**_sage_const_8  + _sage_const_5458 *x**_sage_const_7  + _sage_const_21270 *x**_sage_const_6  + _sage_const_22651 *x**_sage_const_5  + _sage_const_8381 *x**_sage_const_4  + _sage_const_2819 *x**_sage_const_3  + _sage_const_3987 *x**_sage_const_2  + _sage_const_8610 *x + _sage_const_6022 
 
flag=hx.list()
 
N = _sage_const_53 
q = _sage_const_28019 
p = _sage_const_257 
M=matrix([[_sage_const_0  for _ in range(_sage_const_2 *N)] for _ in range(_sage_const_2 *N)])
for i in range(N):
    for j in range(N):
        M[i+N,j] = int(flag[j-i])
        if i == j:
            M[i,j] = q
            M[N+i,N+j] =  _sage_const_1 
 
ex=_sage_const_7367 *x**_sage_const_52  + _sage_const_24215 *x**_sage_const_51  + _sage_const_5438 *x**_sage_const_50  + _sage_const_7552 *x**_sage_const_49  + _sage_const_22666 *x**_sage_const_48  + _sage_const_21907 *x**_sage_const_47  + _sage_const_10572 *x**_sage_const_46  + _sage_const_19756 *x**_sage_const_45  + _sage_const_4083 *x**_sage_const_44  + _sage_const_22080 *x**_sage_const_43  + _sage_const_1757 *x**_sage_const_42  + _sage_const_5708 *x**_sage_const_41  + _sage_const_22838 *x**_sage_const_40  + _sage_const_4022 *x**_sage_const_39  + _sage_const_9239 *x**_sage_const_38  + _sage_const_1949 *x**_sage_const_37  + _sage_const_27073 *x**_sage_const_36  + _sage_const_8192 *x**_sage_const_35  + _sage_const_955 *x**_sage_const_34  + _sage_const_4373 *x**_sage_const_33  + _sage_const_17877 *x**_sage_const_32  + _sage_const_25592 *x**_sage_const_31  + _sage_const_13535 *x**_sage_const_30  + _sage_const_185 *x**_sage_const_29  + _sage_const_9471 *x**_sage_const_28  + _sage_const_9793 *x**_sage_const_27  + _sage_const_22637 *x**_sage_const_26  + _sage_const_3293 *x**_sage_const_25  + _sage_const_27047 *x**_sage_const_24  + _sage_const_21985 *x**_sage_const_23  + _sage_const_13584 *x**_sage_const_22  + _sage_const_6809 *x**_sage_const_21  + _sage_const_24770 *x**_sage_const_20  + _sage_const_16964 *x**_sage_const_19  + _sage_const_8866 *x**_sage_const_18  + _sage_const_22102 *x**_sage_const_17  + _sage_const_18006 *x**_sage_const_16  + _sage_const_3198 *x**_sage_const_15  + _sage_const_19024 *x**_sage_const_14  + _sage_const_2777 *x**_sage_const_13  + _sage_const_9252 *x**_sage_const_12  + _sage_const_9684 *x**_sage_const_11  + _sage_const_3604 *x**_sage_const_10  + _sage_const_7840 *x**_sage_const_9  + _sage_const_17573 *x**_sage_const_8  + _sage_const_11382 *x**_sage_const_7  + _sage_const_12726 *x**_sage_const_6  + _sage_const_6811 *x**_sage_const_5  + _sage_const_10104 *x**_sage_const_4  + _sage_const_7485 *x**_sage_const_3  + _sage_const_858 *x**_sage_const_2  + _sage_const_15100 *x + _sage_const_15860 
 
for i in M.LLL():
    if check(i):
        fx=Zx(list(i[N:]))
        flag=""
        try:
            fp = invertmodprime(fx,N,p)
            for j in decrypt(ex,(fx,fp),N,q,p).list():
                flag+=chr(abs(j))
            if "DASCTF" in flag:
                print(flag)
                break
        except:
            pass
        #DASCTF{9bba98e8024da44a3250acbc06bebc7b}

